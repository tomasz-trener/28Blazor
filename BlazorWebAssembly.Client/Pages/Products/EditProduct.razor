@page "/products/editProduct/{Id:int}"
@inject IProductService ProductService
@inject NavigationManager NavigationManager

<h3>EditProduct</h3>

@if(product == null)
{
    <p>@message</p>
}
else
{
    <ProductForm product="product" OnValidSubmit="HandleValidSubmit" />

    <button type="button" class="btn btn-primary" @onclick="HandleDelete">Delete</button>
}


@code {

    [Parameter]
    public int Id { get; set; }

    private Product product;
    private string message = "Loading...";

    protected override async Task OnInitializedAsync()
    {
        var reponse = await ProductService.GetProductAsync(Id);
        
        if (reponse.Success)
        {
            product = reponse.Data;
        }
        else
        {
            message = reponse.Message;
        }
    }

    private async Task HandleValidSubmit()
    {
        var response = await ProductService.UpdateProductAsync(product);
        if (response.Success)
        {
            NavigationManager.NavigateTo("/products/productsList");
        }
        else
        {
            message = response.Message;
        }
    }

    private async Task HandleDelete()
    {
        var response = await ProductService.DeleteProductAsync(Id);
        if (response.Success)
        {
            NavigationManager.NavigateTo("/products/productsList");
        }
        else
        {
            message = response.Message;
        }
    }
}
