@page "/auth/login"

@using Blazored.LocalStorage
@using Microsoft.AspNetCore.Components.Authorization
@using Shop.Shared.Auth
@using Shop.Shared.Services.AuthService

@inject IAuthService _authService
@inject NavigationManager _navigationManager
@inject ILocalStorageService LocalStorageService
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>Login</h3>

<EditForm Model="userLoginDto" OnValidSubmit="HandleLogin">

    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="userLoginDto.Email" />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="userLoginDto.Password" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>


</EditForm>

@code {
    private UserLoginDto userLoginDto = new UserLoginDto();
    string errorMessage = string.Empty;

    private async void HandleLogin()
    {
        var result = await _authService.Login(userLoginDto);
        if (result.Success)
        {
            await LocalStorageService.SetItemAsync("authToken", result.Data);
            await AuthenticationStateProvider.GetAuthenticationStateAsync();
            _navigationManager.NavigateTo("/");
        }
        else
        {
            errorMessage = result.Message;
        }
    }
}
